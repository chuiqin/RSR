% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/easyRSR.R
\name{easyRSR}
\alias{easyRSR}
\title{Easy to calculate Rank Sum Ratio}
\usage{
easyRSR(
  data = NULL,
  assay = NULL,
  slot = "data",
  group.by = "ident",
  geneset = NULL,
  weights = NULL,
  impacts = NULL,
  rank = "non-integer",
  class = NULL
)
}
\arguments{
\item{data}{A matrix, data frame or seurat object. Whe you input the matrxi
or data frame, the rows should include evaluation indicators (eg. genes,
clinical indicators), and the columns should include evaluation objects
(eg. clinical samples, cell subsets). The data should not include 'NA'value.
Values of each row (evaluation indicators) in data should not be all zero.
When you input seurat object, you need to think about parameter 'assay',
'slot' and 'group.by'.}

\item{assay}{Pull out matrix from this assay of the Seurat object. if NULL,
it use \code{DefaultAssay(data)}).}

\item{slot}{Pull out matrix from this slot of the Seurat object. And the
'data' is default.}

\item{group.by}{You can input the colname of meta.data from seurat object
(e.g, ident, celltype, clusters). And the 'ident' is default.}

\item{geneset}{The evaluation indicators (eg. genes, clinical indicators)
which are included in the rownames of the data. if NULL, it use all
rownames of data.}

\item{weights}{A numeric vector for weights of each evaluation indicator.
The length of weights must be equal to evaluation indicator. And the each
value of weights should be greater than zero. You can enter weights or not.}

\item{impacts}{A character vector for influences of each evaluation
indicator. The length of impacts must be equal to evaluation indicator.
The impacts must be '+' or '-' sign. And the '+' sign means the indicator
has positive effect on evaluation object. You need to enter the impacts.}

\item{rank}{A character vector for calculation of the rank of evaluation
indicator. The rank must be 'non-integer' or 'integer'. The indicator is
arranged by the their values and we will get the integer rank. The indicator
is arranged by linear imputation and we will get the non-integer rank which
it is able to reflects the real difference of the values of indicator
if the rank is 'non-integer'. Sometimes we can not group the evaluation
objects when the rank is 'non-integer'. And the 'non-integer' is default.}

\item{class}{A character vector. The class must be '3', '4', '5', '6', '7'
'8', '9' or '10'.The higher the number of class is, the more groups are
identified. You can simply recognize 'class' as 'resolution' although
 it is not.}
}
\value{
If easyRSR can not group the evaluation objects, it will return a
data frame. The data frame includes RSR (the rank sum ratio) and RSR.rank.
We can compare the evaluation objects by their RSR and acquire their rank.
If easyRSR can group the evaluation objects, it will return a list. List
includes two data frames. The first data frame includes RSR, RSR.rank and
group. The group already satisfies the following conditions : 1. At least 2
observations in each group ; 2. The homogeneity of variance of each group
is satisfied ; 3. There is statistically significant difference between
the RSR of different groups by ANOVA. The sceond data frame includes the
p value of multiple-comparisons are calculated by SNK q Test.
}
\description{
It is easy to calculate Rank Sum Ratio (RSR) for each evaluation
objects base on different evaluation indicators. And at the same time, you
are able to rank and group these evaluation objects quickly.
}
\examples{
# First example
# creata data frame
test <- data.frame(prenatal.visit.rate = c(99.54,96.52,99.36,92.83,91.71,95.35,
96.09,99.27,94.76,84.80), maternal.mortality = c(60.27,59.67,43.91,58.99,35.40,
44.71,49.81,31.69,22.91,81.49), perinatal.mortality = c(16.15,20.10,15.60,17.04,
15.01,13.93,17.43,13.89,19.87,23.63))
rownames(test) <- c(LETTERS[1:10])
test <- t(test)
# Calculate
weights = c(1,1,1)
impacts = c("+","-","-")
a <- easyRSR(data = test, weights = weights, impacts = impacts,
             rank = "integer", class = "3")
a$RSR.result
a$RSR.plot
a <- easyRSR(data = test, weights = weights, impacts = impacts,
             rank = "non-integer", class = "3")
a$RSR.result
a$RSR.plot


# Second example
b <- c('CD79B', 'CD79A', 'CD19', 'CD180', 'CD200', 'CD3D', 'CD2', 'CD3E',
'CD7','CD8A','CD14','CD1C','CD68','CD9','CD247')
a <- easyRSR(data = pbmc_small, geneset = b,
             group.by="RNA_snn_res.1", impacts = rep("+",15))
a$RSR.result


}
\references{
# First example is cited from : Zhenqiu Sun, Yongyong Xu. Medical
# Statistics (4nd ed): Beijing, China: Peopleâ€™s Medical Publishing House,
# 2014:419 (in Chinese). Sceond example is cited from : Tirosh et al,
Science (2016).
}
